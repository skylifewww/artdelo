# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-06-22 21:32
from __future__ import unicode_literals

import article.models
import ckeditor_uploader.fields
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import easy_thumbnails.fields
import embed_video.fields
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article_title', models.CharField(max_length=250, verbose_name='Название статьи')),
                ('article_date', models.DateTimeField(verbose_name='Дата публикации статьи')),
                ('article_number', models.IntegerField(blank=True, default=0, null=True, verbose_name='Номер статьи')),
                ('article_likes', models.IntegerField(default=0, verbose_name='Лайки')),
                ('short_text_ru', ckeditor_uploader.fields.RichTextUploadingField(blank=True, verbose_name='Короткое описание RU')),
                ('short_text_en', ckeditor_uploader.fields.RichTextUploadingField(blank=True, verbose_name='Короткое описание EN')),
                ('video', models.CharField(blank=True, max_length=250, verbose_name='Видео id в кратком описании')),
                ('image', easy_thumbnails.fields.ThumbnailerImageField(blank=True, upload_to=article.models.make_upload_path, verbose_name='Изображение')),
                ('full_text_ru', ckeditor_uploader.fields.RichTextUploadingField(blank=True, verbose_name='Полное описание RU')),
                ('full_text_en', ckeditor_uploader.fields.RichTextUploadingField(blank=True, verbose_name='Полное описание EN')),
                ('article_video', embed_video.fields.EmbedVideoField(blank=True, help_text='URL video', null=True, verbose_name='Видео')),
                ('video_published', models.BooleanField(default='')),
                ('text_published', models.BooleanField(default='')),
            ],
            options={
                'verbose_name': 'Статья',
                'db_table': 'article',
                'verbose_name_plural': 'Статьи',
            },
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=200, unique=True, verbose_name='Автор статьи транслитом')),
                ('author_title', models.CharField(blank=True, default='', max_length=200, unique=True, verbose_name='Автор статьи')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='article.Author', verbose_name='Родительский класс')),
            ],
            options={
                'verbose_name': 'Автор',
                'db_table': 'authors',
                'ordering': ('tree_id', 'level'),
                'verbose_name_plural': 'Авторы',
            },
            managers=[
                ('_default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=250, unique=True, verbose_name='Название категории транслитом')),
                ('category_title', models.CharField(blank=True, default='', max_length=250, verbose_name='Имя категории')),
                ('number_articlies', models.IntegerField(blank=True, default=0, null=True, verbose_name='Количество статей в курсе')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='article.Category', verbose_name='Родительский класс')),
            ],
            options={
                'verbose_name': 'Категорию',
                'db_table': 'category',
                'ordering': ('tree_id', 'level'),
                'verbose_name_plural': 'Категории',
            },
            managers=[
                ('_default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_name', models.CharField(max_length=50, verbose_name='Название тега транслитом')),
                ('tag_title', models.CharField(max_length=50, verbose_name='Имя тега')),
            ],
            options={
                'verbose_name': 'теги',
                'db_table': 'tags',
                'verbose_name_plural': 'тег',
            },
        ),
        migrations.AddField(
            model_name='article',
            name='article_author',
            field=mptt.fields.TreeForeignKey(blank=True, default='', max_length=200, on_delete=django.db.models.deletion.CASCADE, related_name='autor', to='article.Author', verbose_name='Автор статьи'),
        ),
        migrations.AddField(
            model_name='article',
            name='article_category',
            field=mptt.fields.TreeForeignKey(blank=True, default='', on_delete=django.db.models.deletion.CASCADE, related_name='articles', to='article.Category', verbose_name='Категории'),
        ),
        migrations.AddField(
            model_name='article',
            name='article_tag',
            field=models.ManyToManyField(related_name='tags', related_query_name='tags', to='article.Tag', verbose_name='Теги'),
        ),
    ]
